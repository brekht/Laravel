<?php

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Main 'Welcome' page
Route::get('/', function () { return view('welcome.welcome'); });
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Публичные Front страницы Essences и Articles

# Essences
    Route::get('essences', 'Any\EssencesAnyController@index')->name('essences.show');

# Articles
    # Вывод всех Статей
    Route::get('articles', 'Any\ArticlesAnyController@index')->name('articles.show');
    # Страница вывода отдельной статьи. Обрати внимание: Роут принимает 2-а Параметра: id статьи и slug (в виде title) Статьи
    # В данном случае, мы не будем использовать slug для какой-либо выборки, slug в данном случае, мы используем лишь для красоты!
    # С помощью where(), укажем, что id - должен быть как целочисленное
    Route::get('articles/{id}/{slug}', 'Any\ArticlesAnyController@showArticle')->where('id', '\d+')->name('article');
    # Обрати внимание, что вариант Роута ниже (в отличие от аналогичного Роута выше), имеет приставку .html в url (также, {slug} и {id} можно поменять местами)
    # Route::get('article/{id}/{slug}.html', 'Any\ArticlesAnyController@showArticle')->where('id', '\d+')->name('article');

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

#Auth::routes(); /* аналогичные Роуты инициализированы в ручную, а данный Фасад и Шаблоны генерируется при: php artisan make:auth */
#Route::get('/home', 'HomeController@index')->name('home'); /* данный Роут также генерируется при: php artisan make:auth */

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

/* Middleware - посредник между Запросом и Ответом (Request / Response) */
/* Группируем Роуты (для 'middleware' => 'guest') › если Пользователь авторизован, он не попадёт на данную группу Роутов */

# Guest group routes
Route::group(['middleware' => 'guest'], function (){

# php artisan route:list (показывает идентичный список для Auth::routes() и для 9-и Роутов директории 'Auth' расположенных ниже)
/* ---------------------------------------------------------------------------------------------------------------------------- */
/*      Method      URI                     Name                Action                                              Middleware  */
/* ---------------------------------------------------------------------------------------------------------------------------- */
/* 1    GET|HEAD    login                   login               Auth\LoginController@showLoginForm                  web,guest   */
/* 2    POST        login                   -                   Auth\LoginController@login                          web,guest   */
/* 3    POST        logout                  logout              Auth\LoginController@logout                         web         */

/* 4    POST        password/email          password.email      Auth\ForgotPasswordController@sendResetLinkEmail    web,guest   */
/* 5    GET|HEAD    password/reset          password.request    Auth\ForgotPasswordController@showLinkRequestForm   web,guest   */
/* 6    POST        password/reset          -                   Auth\ResetPasswordController@reset                  web,guest   */
/* 7    GET|HEAD    password/reset/{token}  password.reset      Auth\ResetPasswordController@showResetForm          web,guest   */

/* 8    GET|HEAD    register                register            Auth\RegisterController@showRegistrationForm        web,guest   */
/* 9    POST        register                -                   Auth\RegisterController@register                    web,guest   */
/* ---------------------------------------------------------------------------------------------------------------------------- */

# Login
/* 1 */ Route::get('login', 'Auth\LoginController@showLoginForm')->name('login');
/* 2 */ Route::post('login', 'Auth\LoginController@login');
/* 3 */ # Route::post('logout', 'Auth\LoginController@logout')->name('logout'); /* Роут вынесен в группу 'middleware' => 'auth' */

# Forgot / Reset
/* 4 */ Route::post('password/email', 'Auth\ForgotPasswordController@sendResetLinkEmail')->name('password.email');
/* 5 */ Route::get('password/reset', 'Auth\ForgotPasswordController@showLinkRequestForm')->name('password.request');
/* 6 */ Route::post('password/reset', 'Auth\ResetPasswordController@reset');
/* 7 */ Route::get('password/reset/{token}', 'Auth\ResetPasswordController@showResetForm')->name('password.reset');

# Register
/* 8 */ Route::get('register', 'Auth\RegisterController@showRegistrationForm')->name('register');
/* 9 */ Route::post('register', 'Auth\RegisterController@register');

}); # END 'middleware' => 'guest'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Auth group routes (Только зарегистрированный / авторизованный Пользователь сможет попасть в данную группу Роутов)
Route::group(['middleware' => 'auth'], function (){

        # ··············································································································
        # Logout (логично, что только Авторизованный на данный момент Пользователь - может выйти, т.е. 'logout')
/* 3 */ Route::post('logout', 'Auth\LoginController@logout')->name('logout');
        # ··············································································································

        # ··············································································································
        # Auth Account Route (Роут на Контроллер Аккаунта, где Пользователь узнаёт свои права, и получает ссылку на Cabinet)
        Route::get('account', 'Account\AccountController@index')->name('account');
        # ··············································································································

        # ··············································································································
        # Auth Comments Front Route: Добавление (web-форма) Комментария
        # Роут для Авторизованных Пользователей - т.к. только Авторизованные (Зарегистрированные) Пользователи могут оставлять Комментарий
        Route::post('comments/add', 'Any\CommentsAnyController@addComment')->name('comments.add');
        # ··············································································································

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

        # Cabinet (Auth) group routes (и глобально поставить для всех Роутов - префикс 'cabinet')
        # т.к. все Cabinet Роуты должны быть под префиксом 'Cabinet'
        Route::group(['middleware' => 'cabinet', 'prefix' => 'cabinet'], function () {
        # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

            # Cabinet Роут - перенаправляет Пользователя на Cabinet из Аккаунта
            # ··········································································································
            /* '/cabinet' убрать, и оставить только '/', после того как добавим префикс в группу Роутов 'cabinet'   */
            /* т.е. (на примере Роута ниже) URL был бы: 'cabinet/', а после добавления префикса стал как '/'        */
            Route::get('/', 'Cabinet\CabinetController@index')->name('cabinet'); /* Redirect to route('essences')   */
            # ··········································································································

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Admin (Auth) group routes (группа Роутов Admin)
                # В результате middleware 'admin', URL будет следующий: localhost/cabinet/admin/...
                Route::group(['middleware' => 'admin', 'prefix' => 'admin'], function () {

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Admin Root (Auth) group routes (группа Роутов Admin Root)
                    # В результате middleware 'root', URL будет следующий: localhost/cabinet/admin/root/...
                    Route::group(['middleware' => 'root', 'prefix' => 'root'], function () {

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                        # Users
                        #
                        # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                        # Вывод Пользователей
                        # ······························································································
                        Route::get('users', 'Cabinet\UsersController@index')->name('users');
                        # ······························································································
                        # Редактирование Прав (в Методе where() укажем regexp 'только цифры, от 0-нуля и более' для 'id')
                        Route::get('users/edit/{id}', 'Cabinet\UsersController@edit')->where('id', '\d+')->name('users.edit');
                        # Редактирование Прав (Request)
                        Route::post('users/edit/{id}', 'Cabinet\UsersController@editRequest')->where('id', '\d+');
                        # ······························································································
                        Route::get('users/confirm/{id}', 'Cabinet\UsersController@confirm')->where('id', '\d+')->name('users.confirm');
                        # ······························································································
                        # Удаление Пользователя
                        Route::delete('users/delete', 'Cabinet\UsersController@delete')->name('users.delete');
                        # ······························································································

                        # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    }); # END 'middleware' => 'root'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Предусмотрим логику в данной группе Admin, где Admin-у будут доступны действия,
                    # которые также достурны Root-Admin, но не будут доступны простому Confirm Пользователю

                }); # END 'middleware' => 'admin'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Categories
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Вывод Категорий
                    # ··································································································
                    Route::get('categories', 'Cabinet\CategoriesController@index')->name('categories');
                    # ··································································································
                    # Добавление (web-форма)
                    Route::get('categories/add', 'Cabinet\CategoriesController@add')->name('categories.add');
                    # Добавление (Request)
                    # обрати внимание, что URL Роута такой же как и при get. Но для post псевдоним не назначен, т.к. мы
                    # перейдём на данный Роут из web-формы, т.к. web-форма отправляется POST-ом, поэтому Роут можно не именовать
                    Route::post('categories/add', 'Cabinet\CategoriesController@addRequest');
                    # ··································································································
                    # Редактирование (web-форма)
                    # в Методе where() укажем regexp 'только цифры, от 0-нуля и более' для 'id'
                    Route::get('categories/edit/{id}', 'Cabinet\CategoriesController@edit')->where('id', '\d+')->name('categories.edit');
                    # Редактирование (Request)
                    Route::post('categories/edit/{id}', 'Cabinet\CategoriesController@editRequest')->where('id', '\d+');
                    # ··································································································
                    # Удаление Категории (Запрос будет посредством Ajax) Ajax-овый Роут (Входящий параметр Request $request)
                    Route::delete('categories/delete', 'Cabinet\CategoriesController@delete')->name('categories.delete');

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Articles
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Вывод Статей
                    Route::get('articles', 'Cabinet\ArticlesController@index')->name('articles');
                    # ··································································································
                    # Добавление (web-форма)
                    Route::get('articles/add', 'Cabinet\ArticlesController@add')->name('articles.add');
                    # Добавление (Request)
                    Route::post('articles/add', 'Cabinet\ArticlesController@addRequest');
                    # ··································································································
                    # Редактирование (web-форма)
                    Route::get('articles/edit/{id}', 'Cabinet\ArticlesController@edit')->where('id', '\d+')->name('articles.edit');
                    # Редактирование (Request)
                    Route::post('articles/edit/{id}', 'Cabinet\ArticlesController@editRequest')->where('id', '\d+');
                    # ··································································································
                    # Удаление Статьи
                    Route::delete('articles/delete', 'Cabinet\ArticlesController@delete')->name('articles.delete');

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Comments
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Вывод Комментариев
                    Route::get('comments', 'Cabinet\CommentsController@index')->name('comments');
                    # ··································································································
                    # Подтверждение Модерации для Комментария  (принимает id)
                    Route::get('comments/accepted/{id}', 'Cabinet\CommentsController@acceptComment')->where('id', '\d+')->name('comments.accepted');
                    # ··································································································
                    # Редактирование (web-форма)
                    Route::get('comments/edit/{id}', 'Cabinet\CommentsController@edit')->where('id', '\d+')->name('comments.edit');
                    # Редактирование (Request)
                    Route::post('comments/edit/{id}', 'Cabinet\CommentsController@editRequest')->where('id', '\d+');
                    # ··································································································
                    # Удаление Комментария
                    Route::delete('comments/delete', 'Cabinet\CommentsController@delete')->name('comments.delete');

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Essences
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Вывод Essences (... get('cabinet/essences', ...) ~ если бы мы не указали Префикс 'cabinet'
                    Route::get('essences', 'Cabinet\EssencesController@index')->name('essences');
                    # ··································································································
                    # Добавление (web-форма)
                    Route::get('essences/add', 'Cabinet\EssencesController@add')->name('essences.add');
                    # Добавление (Request)
                    Route::post('essences/add', 'Cabinet\EssencesController@addRequest');
                    # ··································································································
                    # Редактирование (web-форма)
                    Route::get('essences/edit/{id}', 'Cabinet\EssencesController@edit')->where('id', '\d+')->name('essences.edit');
                    # Редактирование (Request)
                    Route::post('essences/edit/{id}', 'Cabinet\EssencesController@editRequest')->where('id', '\d+');
                    # ··································································································
                    # Удаление Статьи
                    Route::get('essences/delete/{id}/{comparison}', 'Cabinet\EssencesController@delete')->name('essences.delete');

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Properties (передаётся {id} Сущности (а также {comparison} для защиты от подмены))
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    Route::get('properties/{id}', 'Cabinet\PropertiesController@show')->where('id', '\d+')->name('properties');
                    # ··································································································


                    # Редактирование Num (web-форма)
                    Route::get('properties/edit/num/{id}/{comparison}', 'Cabinet\PropertiesController@editNum')->where('id', '\d+')->name('properties.editNum');
                    # Редактирование Num (Request)
                    Route::post('properties/edit/num/{id}/{comparison}', 'Cabinet\PropertiesController@editNumRequest')->where('id', '\d+');
                    # ··································································································
                    # Очистить Свойство Num
                    Route::delete('properties/num/clear', 'Cabinet\PropertiesController@clearNum')->name('properties.clearNum');
                    # ··································································································


                    # Редактирование Desc (web-форма)
                    Route::get('properties/edit/desc/{id}/{comparison}', 'Cabinet\PropertiesController@editDesc')->where('id', '\d+')->name('properties.editDesc');
                    # Редактирование Desc (Request)
                    Route::post('properties/edit/desc/{id}/{comparison}', 'Cabinet\PropertiesController@editDescRequest')->where('id', '\d+');
                    # ··································································································
                    # Очистить Свойство Desc
                    Route::delete('properties/desc/clear', 'Cabinet\PropertiesController@clearDesc')->name('properties.clearDesc');
                    # ··································································································


                    # Загрузка Img (Request)
                    Route::post('properties/upload/img/{id}/{comparison}', 'Cabinet\PropertiesController@uploadImgRequest')->where('id', '\d+')->name('properties.uploadImg');
                    # ··································································································


                    # Очистить Свойство Img
                    Route::delete('properties/img/clear', 'Cabinet\PropertiesController@clearImg')->name('properties.clearImg');
                    # ··································································································

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                # Free Properties (передаётся {id} Сущности и {prop_id} Free Свойства (а также {comparison} для защиты от подмены))
                #
                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

                    # Добавление Свободного Свойства
                    Route::get('freeproperties/add/{id}/{comparison}', 'Cabinet\FreePropertiesController@add')->where('id', '\d+')->name('freeproperties.add');
                    # Добавление Свободного Свойства (Request)
                    Route::post('freeproperties/add/{id}/{comparison}', 'Cabinet\FreePropertiesController@addRequest')->where('id', '\d+');
                    # ··································································································

                    # Редактирование Свободного Свойства (web-форма)
                    Route::get('freeproperties/edit/{id}/{prop_id}/{comparison}', 'Cabinet\FreePropertiesController@edit')->where('id', '\d+')->where('prop_id', '\d+')->name('freeproperties.edit');
                    # Редактирование Свободного Свойства (Request)
                    Route::post('freeproperties/edit/{id}/{prop_id}/{comparison}', 'Cabinet\FreePropertiesController@editRequest')->where('id', '\d+')->where('prop_id', '\d+');
                    # ··································································································

                    # Удаление Свободного Свойства
                    Route::get('freeproperties/delete/{id}/{prop_id}/{comparison}/{cmprsn}', 'Cabinet\FreePropertiesController@delete')->where('prop_id', '\d+')->where('prop_id', '\d+')->name('freeproperties.delete');
                    # ··································································································

                # ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

        }); # END 'middleware' => 'cabinet'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

}); # END 'middleware' => 'auth'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::